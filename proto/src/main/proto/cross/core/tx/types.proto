syntax = "proto3";
package cross.core.tx;

import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
import "tendermint/abci/types.proto";
import "ibc/core/client/v1/client.proto";
import "cross/core/auth/types.proto";

option go_package = "github.com/datachainlab/cross/x/core/tx/types";
option (gogoproto.goproto_getters_all) = false;

message Tx {
  option (gogoproto.equal) = false;
  bytes id = 1 [(gogoproto.casttype) = "github.com/datachainlab/cross/x/core/types.TxID"];
  CommitProtocol commit_protocol = 2;
  repeated ResolvedContractTransaction contract_transactions = 3 [(gogoproto.nullable) = false];
  // Timeout height relative to the current block height.
  // The timeout is disabled when set to 0.
  ibc.core.client.v1.Height timeout_height = 4
      [(gogoproto.moretags) = "yaml:\"timeout_height\"", (gogoproto.nullable) = false];
  // Timeout timestamp (in nanoseconds) relative to the current block timestamp.
  // The timeout is disabled when set to 0.
  uint64 timeout_timestamp = 5
    [(gogoproto.moretags) = "yaml:\"timeout_timestamp\""];
}

message ResolvedContractTransaction {
  option (gogoproto.equal) = false;

  google.protobuf.Any cross_chain_channel = 1 [(gogoproto.nullable) = true];
  repeated cross.core.auth.Account signers = 2 [(gogoproto.nullable) = false];
  bytes call_info = 3 [(gogoproto.casttype) = "ContractCallInfo"];
  ReturnValue return_value = 4;
  repeated google.protobuf.Any call_results = 5 [(gogoproto.nullable) = false];
}

enum CommitProtocol {
  option (gogoproto.goproto_enum_prefix) = false;

  COMMIT_PROTOCOL_UNKNOWN = 0;
  COMMIT_PROTOCOL_SIMPLE  = 1;
  COMMIT_PROTOCOL_TPC     = 2;
}

message ReturnValue {
  bytes value = 1;
}

// ConstantValueCallResult is a CallResult wraps a constant value
message ConstantValueCallResult {
  google.protobuf.Any cross_chain_channel = 1 [(gogoproto.nullable) = false];
  bytes k = 2;
  bytes v = 3;
}

message ContractCallResult {
  bytes data = 1;
  repeated tendermint.abci.Event events = 2 [
    (gogoproto.nullable) = false
  ];
}
